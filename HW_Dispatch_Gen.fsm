/*%FSM<COMPILE "E:\Bohemia Interactive Tools\FSM Editor Personal Edition\scriptedFSM.cfg, HW_Dispatch_Gen">*/
/*%FSM<HEAD>*/
/*
item0[] = {"standby",2,250,-117.438744,1760.338013,-27.438709,1810.338013,0.000000,"standby"};
item1[] = {"time_for_new_gig",4,4314,2.773048,1822.903198,92.773041,1912.545654,1.000000,"time for" \n "new gig" \n "-clear-"};
item2[] = {"gig_generator",2,250,2.753155,1948.887573,92.753128,1998.887451,0.000000,"gig" \n "generator"};
item3[] = {"call_in",4,218,-16.004354,1579.932007,73.995605,1629.932007,1.000000,"call-in"};
item4[] = {"call_out",4,218,-261.682007,1751.779419,-193.426971,1818.407715,0.000000,"call-out"};
item5[] = {"off_duty_",2,250,-108.009804,1334.885376,-18.009850,1384.885376,0.000000,"off duty" \n ""};
item6[] = {"clear_expired_gi",4,218,-228.512650,1828.015625,-139.555847,1919.744629,1.000000,"clear" \n "expired" \n "gigs"};
item7[] = {"bottomless_hole",2,250,-229.247986,1948.857910,-139.247971,1998.858032,0.000000,"bottomless" \n "hole of lost" \n "opportunities"};
item8[] = {"able",4,218,-98.242714,1868.172607,-47.083199,1906.929321,0.000000,"able"};
item9[] = {"commit",4,218,-221.977814,1688.321045,-131.977798,1738.320923,0.000000,"commit"};
item10[] = {"",7,210,26.274055,1355.922485,34.274055,1363.922485,0.000000,""};
item11[] = {"clear_all_tasks",2,250,-272.346069,1331.603149,-182.345932,1381.603149,0.000000,"clear" \n "all tasks"};
item12[] = {"enable__commit",4,218,-114.130234,1665.210693,-30.256638,1720.201904,0.000000,"enable " \n "commit"};
item13[] = {"busy_ish_",2,250,-171.238815,1580.154053,-81.238800,1630.153687,0.000000,"busy(ish)"};
item14[] = {"",7,210,-286.197327,1601.116455,-278.197327,1609.116455,0.000000,""};
item15[] = {"",7,210,-286.616150,1771.990601,-278.616119,1779.990601,0.000000,""};
item16[] = {"",7,210,44.214588,1721.386230,52.214581,1729.386230,0.000000,""};
item17[] = {"assigned",4,218,-117.221046,2031.471191,-27.221020,2081.470703,0.000000,"assigned"};
item18[] = {"",7,210,-308.841980,2052.329834,-300.841980,2060.329834,0.000000,""};
item19[] = {"",7,210,-308.643005,1676.538452,-300.643005,1684.538452,0.000000,""};
item20[] = {"unfit",4,218,-14.722290,1239.299927,75.277405,1289.299927,0.000000,"unfit"};
item21[] = {"unfit_fail",4,218,-163.232544,1444.338013,-87.180687,1481.070435,2.000000,"unfit" \n "fail"};
item22[] = {"epic_un_fail",4,218,-107.594162,1412.468994,-17.594273,1454.678955,0.000000,"epic un-fail"};
item23[] = {"go__",0,250,-251.875198,1252.271973,-161.875137,1302.271973,0.000000,"go!" \n ""};
item24[] = {"_",8,218,-171.012238,1345.669556,-156.367966,1374.085083,0.000000,""};
item25[] = {"",7,210,-76.565742,1969.813599,-68.565742,1977.813599,0.000000,""};
item26[] = {"atc_off__",4,218,67.391815,1337.520996,138.713440,1384.272705,3.000000,"atc off!?"};
item27[] = {"atc_off__",4,218,-125.212784,1499.946777,-53.891159,1546.698486,3.000000,"atc off!?"};
item28[] = {"atc_off__",4,218,-33.778873,1717.502930,37.542843,1764.254639,3.000000,"atc off!?"};
item29[] = {"time_for_new_gig_1",4,218,68.911865,1743.817505,171.641968,1826.915771,0.000000,"time for" \n "new gig" \n "-full-"};
link0[] = {0,1};
link1[] = {0,4};
link2[] = {0,6};
link3[] = {0,9};
link4[] = {0,12};
link5[] = {0,28};
link6[] = {0,29};
link7[] = {1,2};
link8[] = {2,25};
link9[] = {3,0};
link10[] = {4,11};
link11[] = {5,10};
link12[] = {5,22};
link13[] = {6,7};
link14[] = {7,25};
link15[] = {8,0};
link16[] = {9,13};
link17[] = {10,3};
link18[] = {10,20};
link19[] = {10,26};
link20[] = {11,24};
link21[] = {12,0};
link22[] = {13,3};
link23[] = {13,14};
link24[] = {13,16};
link25[] = {13,21};
link26[] = {13,27};
link27[] = {14,15};
link28[] = {15,6};
link29[] = {16,1};
link30[] = {17,18};
link31[] = {18,19};
link32[] = {19,13};
link33[] = {20,5};
link34[] = {21,11};
link35[] = {22,5};
link36[] = {23,24};
link37[] = {24,5};
link38[] = {25,8};
link39[] = {25,17};
link40[] = {26,5};
link41[] = {27,13};
link42[] = {28,0};
link43[] = {29,0};
globals[] = {0.000000,0,0,0,0,640,480,3,62,6316128,1,-518.163208,149.195648,2216.625488,1327.942749,591,787,1};
window[] = {0,-1,-1,-1,-1,961,163,1581,60,1,609};
*//*%FSM</HEAD>*/
class FSM
{
  fsmName = "HW_Dispatch_Gen";
  class States
  {
    /*%FSM<STATE "standby">*/
    class standby
    {
      name = "standby";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "atc_off__">*/
        class atc_off__
        {
          priority = 3.000000;
          to="standby";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"RadioCall_A && ( (driver chopper) != player || !isBatteryOnRtd chopper || !(profileNamespace getVariable ""HSim_radioATCOn"") );"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"" \n
           "RadioCall_A = false;" \n
           "hint ""Get in the Helicopter and turn on the power and comms so you can use the radio!"";"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "clear_expired_gi">*/
        class clear_expired_gi
        {
          priority = 1.000000;
          to="bottomless_hole";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(count GigLineup) > 0 && (time > _tExp);"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "time_for_new_gig">*/
        class time_for_new_gig
        {
          priority = 1.000000;
          to="gig_generator";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(count GigLineup < GigNumMax) && (time > _tNew);"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/" // time to create next new gig (ideally should be tuned against expiry rate for gameplay adjustment)" \n
           "" \n
           "_tNew = time + 20 + (random 150) + (random 150); // uses two-dice-sum probability distribution (high center)"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "enable__commit">*/
        class enable__commit
        {
          priority = 0.000000;
          to="standby";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!isNull currentTask player && !Pilot_Commited;"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"2 setRadioMsg ""Rqst. Current Task"";"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "commit">*/
        class commit
        {
          priority = 0.000000;
          to="busy_ish_";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"RadioCall_B && (currentTask player != TaskNull);"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"RadioCall_B = false;" \n
           "" \n
           "call HW_Fx_Pilot_Task_Commit;" \n
           "Pilot_Commited = true;"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "time_for_new_gig_1">*/
        class time_for_new_gig_1
        {
          priority = 0.000000;
          to="standby";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(time > _tNew);"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"_tNew = time + 20 + (((random 500) - random(400)) max 0);" \n
           "" \n
           "// this should clear the buildup effect causing new gigs to instantly appear upon the lineup ceasing to be full" \n
           ""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "call_out">*/
        class call_out
        {
          priority = 0.000000;
          to="clear_all_tasks";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"RadioCall_A;" \n
           ""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"RadioCall_A = false;" \n
           "			" \n
           "central sideRadio ""HW_Radio_See_You_Later"";" \n
           "" \n
           "" \n
           "1 setRadioMsg ""Call back in"";" \n
           "2 setRadioMsg ""NULL"";"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "gig_generator">*/
    class gig_generator
    {
      name = "gig_generator";
      init = /*%FSM<STATEINIT""">*/"" \n
       "//  entries below appear multiple times as needed to adjust the relative likelyhood of each type of gig..." \n
       "" \n
       "_random_fnc_dispatchGig =" \n
       " [" \n
       "	HW_Fx_Dispatch_Taxi, HW_Fx_Dispatch_Taxi, HW_Fx_Dispatch_Taxi, HW_Fx_Dispatch_Taxi," \n
       "	HW_Fx_Dispatch_Survey, HW_Fx_Dispatch_Survey," \n
       "	HW_Fx_Dispatch_Cargo, HW_Fx_Dispatch_Cargo" \n
       "" \n
       "] call BIS_fnc_selectRandom;" \n
       "" \n
       "" \n
       "call _random_fnc_dispatchGig;" \n
       "" \n
       "playSound ""FX_Dispatch_Chime"";" \n
       "if (random (10) <  2.5) then {  call HW_Fx_Disptach_Radio_Update;  };// dispatch won't always call out a new gig by radio, most times, it's just a chime" \n
       "" \n
       "" \n
       "" \n
       ""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "assigned">*/
        class assigned
        {
          priority = 0.000000;
          to="busy_ish_";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"Pilot_Commited"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "able">*/
        class able
        {
          priority = 0.000000;
          to="standby";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!Pilot_Commited"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "off_duty_">*/
    class off_duty_
    {
      name = "off_duty_";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "atc_off__">*/
        class atc_off__
        {
          priority = 3.000000;
          to="off_duty_";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"RadioCall_A && ( (driver chopper) != player || !isBatteryOnRtd chopper || !(profileNamespace getVariable ""HSim_radioATCOn"" ));"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"" \n
           "RadioCall_A = false;" \n
           "hint ""Get in the Helicopter and turn on the power and comms so you can use the radio!"";"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "call_in">*/
        class call_in
        {
          priority = 1.000000;
          to="standby";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"RadioCall_A && !_fail;"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"RadioCall_A = false;" \n
           "" \n
           "1 setRadioMsg ""Call out of duty"";" \n
           "" \n
           "" \n
           "_tNew = time + 3 + random 15; // time to create next new gig (ideally should be tuned against expiry rate for gameplay adjustment)" \n
           "_tExp = time + 5; // time to check for expired ones" \n
           "" \n
           "Pilot_Commited = false;" \n
           "" \n
           "" \n
           "central sideRadio ([""HW_Radio_RogerStby"", ""HW_Radio_ReceivedStby"", ""HW_Radio_CopyStby""] call bis_fnc_selectRandom);" \n
           ""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "unfit">*/
        class unfit
        {
          priority = 0.000000;
          to="off_duty_";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"RadioCall_A && _fail;"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"RadioCall_A = false;" \n
           "_fail = true;" \n
           "" \n
           "hint ""The state of your cabin is not up to standards for taking on assignments, clean it up first!"";"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "epic_un_fail">*/
        class epic_un_fail
        {
          priority = 0.000000;
          to="off_duty_";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_fail && Heli_Cabin_Condition > .9;"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"_fail = false;" \n
           "1 setRadioMsg ""Call back in"";"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "bottomless_hole">*/
    class bottomless_hole
    {
      name = "bottomless_hole";
      init = /*%FSM<STATEINIT""">*/"_GigCycleCheck = GigLineup;" \n
       "GigLineup = [];" \n
       "" \n
       "_down = false;" \n
       "{" \n
       "	if (time < (_x getVariable ""exp"")) then" \n
       "	{" \n
       "		// still good - keep it!" \n
       "		GigLineup set [count GigLineup, _x];" \n
       "" \n
       "	} else" \n
       "	{" \n
       "		// if not... well, then we kill them" \n
       "						" \n
       "		player RemoveSimpleTask (_x getVariable ""tsk"");" \n
       "		deleteMarker (_x getVariable ""mkr"");" \n
       "		deleteGroup _x;" \n
       "" \n
       "		_down = true;" \n
       "	};" \n
       "" \n
       "} foreach _GigCycleCheck;" \n
       "" \n
       "_GigCycleCheck = nil;" \n
       "_tExp = time + 5; // time to next check for expired gigs" \n
       "" \n
       "" \n
       "if _down then" \n
       "{" \n
       "	playSound ""FX_Dispatch_Beep"";" \n
       "};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "assigned">*/
        class assigned
        {
          priority = 0.000000;
          to="busy_ish_";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"Pilot_Commited"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "able">*/
        class able
        {
          priority = 0.000000;
          to="standby";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!Pilot_Commited"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "clear_all_tasks">*/
    class clear_all_tasks
    {
      name = "clear_all_tasks";
      init = /*%FSM<STATEINIT""">*/"{" \n
       "	player RemoveSimpleTask (_x getVariable ""tsk"");" \n
       "	deleteMarker (_x getVariable ""mkr"");" \n
       "	deleteGroup _x;" \n
       "" \n
       "} foreach GigLineup;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="off_duty_";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "busy_ish_">*/
    class busy_ish_
    {
      name = "busy_ish_";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "atc_off__">*/
        class atc_off__
        {
          priority = 3.000000;
          to="busy_ish_";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"RadioCall_A && ((driver chopper) != player || !isBatteryOnRtd chopper)"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"" \n
           "RadioCall_A = false;" \n
           "RadioCall_A && ( (driver chopper) != player || !isBatteryOnRtd chopper || !(profileNamespace getVariable ""HSim_radioATCOn"") );"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "unfit_fail">*/
        class unfit_fail
        {
          priority = 2.000000;
          to="clear_all_tasks";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"Heli_Cabin_Condition < .6;"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"1 setRadioMsg ""NULL"";" \n
           "2 setRadioMsg ""NULL"";" \n
           "_fail = true;" \n
           "Pilot_Commited = false;"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "clear_expired_gi">*/
        class clear_expired_gi
        {
          priority = 1.000000;
          to="bottomless_hole";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(count GigLineup) > 0 && (time > _tExp);"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "time_for_new_gig">*/
        class time_for_new_gig
        {
          priority = 1.000000;
          to="gig_generator";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(count GigLineup < GigNumMax) && (time > _tNew);"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/" // time to create next new gig (ideally should be tuned against expiry rate for gameplay adjustment)" \n
           "" \n
           "_tNew = time + 20 + (random 150) + (random 150); // uses two-dice-sum probability distribution (high center)"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "call_in">*/
        class call_in
        {
          priority = 1.000000;
          to="standby";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"RadioCall_A && !_fail;"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"RadioCall_A = false;" \n
           "" \n
           "1 setRadioMsg ""Call out of duty"";" \n
           "" \n
           "" \n
           "_tNew = time + 3 + random 15; // time to create next new gig (ideally should be tuned against expiry rate for gameplay adjustment)" \n
           "_tExp = time + 5; // time to check for expired ones" \n
           "" \n
           "Pilot_Commited = false;" \n
           "" \n
           "" \n
           "central sideRadio ([""HW_Radio_RogerStby"", ""HW_Radio_ReceivedStby"", ""HW_Radio_CopyStby""] call bis_fnc_selectRandom);" \n
           ""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "go__">*/
    class go__
    {
      name = "go__";
      init = /*%FSM<STATEINIT""">*/"_fail = false;" \n
       "Pilot_Commited = false;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="off_duty_";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
  };
  initState="go__";
  finalStates[] =
  {
  };
};
/*%FSM</COMPILE>*/