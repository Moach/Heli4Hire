showGPS = 0;
showCompass = 0;


class CfgIdentities
{
	class HW_Ident_Dispatch
	{
		name = "Central Dispatch";
		face = "Face20";
        glasses = "None";
        speaker = "Dan";
        pitch = 1.1;
	};
};

class CfgRadio
{
	sounds[] = {};
		
	class HW_Radio_ReceivedStby
	{
		name = "";
		sound[] = {"\sound\received.ogg", db-100, 1.0};
		title = "Received, Standby...";
	};
	
	class HW_Radio_RogerStby
	{
		name = "";
		sound[] = {"\sound\roger.ogg", db-100, 1.0};
		title = "Roger That, Standby...";
	};
	
	class HW_Radio_CopyStby
	{
		name = "";
		sound[] = {"\sound\copy.ogg", db-100, 1.0};
		title = "Copy That, Stay on just a sec...";
	};
	
	
	
	class HW_Radio_Update
	{
		name = "";
		sound[] = {"\sound\update.ogg", db-100, 1.0};
		title = "Able Units, Update!";
	};
	
	class HW_Radio_CheckReport
	{
		name = "";
		sound[] = {"\sound\check report.ogg", db-100, 1.0};
		title = "Able Units, Map Check, Acknowledge!";
	};
	
	class HW_Radio_MapCheck
	{
		name = "";
		sound[] = {"\sound\map check.ogg", db-100, 1.0};
		title = "Able Units, Map Check!";
	};
	
	class HW_Radio_UpdateReport
	{
		name = "";
		sound[] = {"\sound\update report.ogg", db-100, 1.0};
		title = "Able Units, Update, Check and Acknowledge!";
	};
	
	class HW_Radio_CheckIn
	{
		name = "";
		sound[] = {"\sound\check in.ogg", db-100, 1.0};
		title = "Able Units, Check In!";
	};
	
	class HW_Radio_Report
	{
		name = "";
		sound[] = {"\sound\report.ogg", db-100, 1.0};
		title = "Able Units, Acknowledge!";
	};
	
	
	class HW_Radio_Dispatch
	{
		name = "";
		sound[] = {"\sound\dispatch update.ogg", db-100, 1.0};
		title = "Able units, Dispatch, Update!";
	};
	
	class HW_Radio_Update_Info
	{
		name = "";
		sound[] = {"\sound\update info.ogg", db-100, 1.0};
		title = "Able Units, Update, Call back for more info...";
	};
	
	
	
	
	
	class HW_Radio_Unable
	{
		name = "";
		sound[] = {"\sound\copy unable.ogg", db-100, 1.0};
		title = "We copy you unable. Please Confirm!";
	};
	
	class HW_Radio_Taxi_Commit
	{
		name = "";
		sound[] = {"\sound\copy enroute.ogg", db-100, 1.0};
		title = "Confirmed! Passengers should be out at departure by the time you get there...";
	};
	
	
	class HW_Radio_Taxi_Enroute_Abort
	{
		name = "";
		sound[] = {"\sound\abort with pax.ogg", db-100, 1.0};
		title = "Understand aborting enroute and dropping passengers! Copy that! Advise when landed!";
	};
	
	class HW_Radio_Taxi_Abort_Landed
	{
		name = "";
		sound[] = {"\sound\abort pax landed.ogg", db-100, 1.0};
		title = "Copy landed! - We got a fix on your location and will dispatch another bird, can you confirm?";
	};
	
	class HW_Radio_Taxi_Little_Late
	{
		name = "";
		sound[] = {"\sound\a little late.ogg", db-100, 1.0};
		title = "Dispatch to Larkin - What's taking you so long?? Good thing you're almost there, or we'd have sent someone else by now!";
	};
	
	class HW_Radio_Taxi_Too_Late
	{
		name = "";
		sound[] = {"\sound\a whole lot late.ogg", db-100, 1.0};
		title = "Dispatch to Larkin - Where the hell are you?! ... You are dismissed from this assignment! ... We've sent out another chopper!";
	};
	
	class HW_Radio_Taxi_Epic_Fail
	{
		name = "";
		sound[] = {"\sound\epic fail.ogg", db-100, 1.0};
		title = " ** RANT ** ";
	};
	
	class HW_Radio_See_You_Later
	{
		name = "";
		sound[] = {"\sound\later.ogg", db-100, 1.0};
		title = "Copy that! See you later!";
	};
	
};

class CfgSounds
{
	sounds[] = {};
	
	class FX_Dispatch_Chime
	{
		// how the sound is referred to in the editor (e.g. trigger effects)
		name = "hw_fx_dispatch_chime";
		// filename, volume, pitch
		sound[] = {"\sound\chime.ogg", 1, 1};
		titles[] = {};
	};
	class FX_Dispatch_Beep
	{
		// how the sound is referred to in the editor (e.g. trigger effects)
		name = "hw_fx_dispatch_beep";
		// filename, volume, pitch
		sound[] = {"\sound\beepbeep.ogg", 1, 1};
		titles[] = {};
	};
	
	
	
	class FX_Pump_Fuel
	{
		// how the sound is referred to in the editor (e.g. trigger effects)
		name = "hw_fx_pump_fuel";
		// filename, volume, pitch
		sound[] = {"\sound\fx_pump_fuel.ogg", 1, 1};
		titles[] = {};
	};
	class FX_Draw_Fuel_Line
	{
		// how the sound is referred to in the editor (e.g. trigger effects)
		name = "hw_fx_draw_fuel_line";
		// filename, volume, pitch
		sound[] = {"\sound\fx_draw_fuel_line.ogg", 1, 1};
		titles[] = {};
	};
	class FX_Rope_Release
	{
		// how the sound is referred to in the editor (e.g. trigger effects)
		name = "hw_fx_rope_release";
		// filename, volume, pitch
		sound[] = {"\sound\fx_rope_release.ogg", 1, 1};
		titles[] = {};
	};
	class FX_Rope_Connect
	{
		// how the sound is referred to in the editor (e.g. trigger effects)
		name = "hw_fx_rope_connect";
		// filename, volume, pitch
		sound[] = {"\sound\fx_rope_connect.ogg", 1, 1};
		titles[] = {};
	};
	class FX_Rope_Unlatch
	{
		// how the sound is referred to in the editor (e.g. trigger effects)
		name = "hw_fx_rope_unlatch";
		// filename, volume, pitch
		sound[] = {"\sound\fx_rope_unlatch.ogg", 1, 1};
		titles[] = {};
	};
	
	class FX_Fail_Engine_Bad
	{
		// how the sound is referred to in the editor (e.g. trigger effects)
		name = "hw_fx_fail_engine_bad";
		// filename, volume, pitch
		sound[] = {"\sound\fx_fail_engine_bad.ogg", 1, 1};
		titles[] = {};
	};
	
	class FX_Fail_Surge
	{
		// how the sound is referred to in the editor (e.g. trigger effects)
		name = "hw_fx_fail_surge";
		// filename, volume, pitch
		sound[] = {"\sound\fx_fail_surge.ogg", 1, 1};
		titles[] = {};
	};
	
	class FX_Fail_Clunk
	{
		// how the sound is referred to in the editor (e.g. trigger effects)
		name = "hw_fx_fail_clunk";
		// filename, volume, pitch
		sound[] = {"\sound\fx_fail_clunk.ogg", 1, 1};
		titles[] = {};
	};
	
	class FX_Fail_Crackling
	{
		// how the sound is referred to in the editor (e.g. trigger effects)
		name = "hw_fx_fail_crackling";
		// filename, volume, pitch
		sound[] = {"\sound\fx_fail_crackling.ogg", 1, 1};
		titles[] = {};
	};
	
	class FX_Fail_Rough
	{
		// how the sound is referred to in the editor (e.g. trigger effects)
		name = "hw_fx_fail_rough";
		// filename, volume, pitch
		sound[] = {"\sound\fx_fail_rough.ogg", 1, 1};
		titles[] = {};
	};
};


class CfgLoadingTexts
{
	//--- Delay between texts are swapped (by default same as delay for images)
	refreshDelay = 10;

	//--- Loading text container
	class Heli4Hire_1
	{
		//--- Hint title
		title = "Heli-4-Hire";

		//--- Lines of text (<br /> will be placed inbetween them)
		text[] = {
			"Flying with any damaged component is extremely dangerous!",
			"A slightly off rotor may cause strain on the transmission, leading to damage.",
			"A damaged transmission may stress the engine leading up to an emergency situation..."
		};

		//--- Enable diary record (e.g. text is atimatically added to 'Hints' category in notes)
		isDiary = 1;
	};
	class Heli4Hire_2
	{
		//--- Hint title
		title = "Heli-4-Hire";

		//--- Lines of text (<br /> will be placed inbetween them)
		text[] = {
			"Good Pilots will always inspect their gear before takoff, so make sure to check if your bird is proper for flight.",
			"It's also a good idea to verify the upkeep of your cabin, and clean it up as it gets increasingly messy with passengers coming in and out."
		};

		//--- Enable diary record (e.g. text is atimatically added to 'Hints' category in notes)
		isDiary = 1;
	};
	class Heli4Hire_3
	{
		//--- Hint title
		title = "Heli-4-Hire";

		//--- Lines of text (<br /> will be placed inbetween them)
		text[] = {
			"If you need your bird serviced and refueled, go talk to the hangar maintenance crew, they're there to help!",
			"IF all you need is fuel, you may find more convenient to use the pump by the hangar and fill it up yourself."
		};

		//--- Enable diary record (e.g. text is atimatically added to 'Hints' category in notes)
		isDiary = 1;
	};
	class Heli4Hire_4
	{
		//--- Hint title
		title = "Heli-4-Hire";

		//--- Lines of text (<br /> will be placed inbetween them)
		text[] = {
			"Give dispatch a call by radio (0-0-1) to let them know you're up and able.",
			"You may abort assignments at any time, but a real pro wouldn't leave his passengers stranded unless extremely necessary."
		};

		//--- Enable diary record (e.g. text is atimatically added to 'Hints' category in notes)
		isDiary = 1;
	};
	class Heli4Hire_5
	{
		//--- Hint title
		title = "Heli-4-Hire";

		//--- Lines of text (<br /> will be placed inbetween them)
		text[] = {
			"As a pilot, it is your responsibility to judge if you have enough fuel before taking on a task",
			"Nobody can do this for you, so be wary that dispatch relies on YOU to account for the safety of your flight."
		};

		//--- Enable diary record (e.g. text is atimatically added to 'Hints' category in notes)
		isDiary = 1;
	};
};


///////////////////////////////////////////////////////////////////////////
/// Styles
///////////////////////////////////////////////////////////////////////////

// Control types
#define CT_STATIC           0
#define CT_BUTTON           1
#define CT_EDIT             2
#define CT_SLIDER           3
#define CT_COMBO            4
#define CT_LISTBOX          5
#define CT_TOOLBOX          6
#define CT_CHECKBOXES       7
#define CT_PROGRESS         8
#define CT_HTML             9
#define CT_STATIC_SKEW      10
#define CT_ACTIVETEXT       11
#define CT_TREE             12
#define CT_STRUCTURED_TEXT  13
#define CT_CONTEXT_MENU     14
#define CT_CONTROLS_GROUP   15
#define CT_SHORTCUTBUTTON   16
#define CT_XKEYDESC         40
#define CT_XBUTTON          41
#define CT_XLISTBOX         42
#define CT_XSLIDER          43
#define CT_XCOMBO           44
#define CT_ANIMATED_TEXTURE 45
#define CT_OBJECT           80
#define CT_OBJECT_ZOOM      81
#define CT_OBJECT_CONTAINER 82
#define CT_OBJECT_CONT_ANIM 83
#define CT_LINEBREAK        98
#define CT_USER             99
#define CT_MAP              100
#define CT_MAP_MAIN         101
#define CT_LISTNBOX         102

// Static styles
#define ST_POS            0x0F
#define ST_HPOS           0x03
#define ST_VPOS           0x0C
#define ST_LEFT           0x00
#define ST_RIGHT          0x01
#define ST_CENTER         0x02
#define ST_DOWN           0x04
#define ST_UP             0x08
#define ST_VCENTER        0x0C

#define ST_TYPE           0xF0
#define ST_SINGLE         0x00
#define ST_MULTI          0x10
#define ST_TITLE_BAR      0x20
#define ST_PICTURE        0x30
#define ST_FRAME          0x40
#define ST_BACKGROUND     0x50
#define ST_GROUP_BOX      0x60
#define ST_GROUP_BOX2     0x70
#define ST_HUD_BACKGROUND 0x80
#define ST_TILE_PICTURE   0x90
#define ST_WITH_RECT      0xA0
#define ST_LINE           0xB0

#define ST_SHADOW         0x100
#define ST_NO_RECT        0x200
#define ST_KEEP_ASPECT_RATIO  0x800

#define ST_TITLE          ST_TITLE_BAR + ST_CENTER

// Slider styles
#define SL_DIR            0x400
#define SL_VERT           0
#define SL_HORZ           0x400

#define SL_TEXTURES       0x10

// progress bar 
#define ST_VERTICAL       0x01
#define ST_HORIZONTAL     0

// Listbox styles
#define LB_TEXTURES       0x10
#define LB_MULTI          0x20

// Tree styles
#define TR_SHOWROOT       1
#define TR_AUTOCOLLAPSE   2

// MessageBox styles
#define MB_BUTTON_OK      1
#define MB_BUTTON_CANCEL  2
#define MB_BUTTON_USER    4

#define GUI_GRID_X	(0)
#define GUI_GRID_Y	(0)
#define GUI_GRID_W	(0.03125)
#define GUI_GRID_H	(0.05)
#define GUI_GRID_WAbs	(1)
#define GUI_GRID_HAbs	(1)


///////////////////////////////////////////////////////////////////////////
/// Base Classes
///////////////////////////////////////////////////////////////////////////
class RscText
{
	access = 0;
	type = 0;
	idc = -1;
	colorBackground[] = {0,0,0,0};
	colorText[] = {1,1,1,1};
	text = "";
	fixedWidth = 0;
	x = 0;
	y = 0;
	h = 0.037;
	w = 0.3;
	style = 0;
	shadow = 1;
	colorShadow[] = {0,0,0,0.5};
	font = "FontNormal";
	SizeEx = "(			(			(1 / 1.2) / 20) * 0.7)";
	linespacing = 1;
};
class RscStructuredText
{
	access = 0;
	type = 13;
	idc = -1;
	style = 0;
	colorText[] = {1,1,1,1};
	class Attributes
	{
		font = "FontNormal";
		color = "#ffffff";
		align = "left";
		shadow = 1;
	};
	x = 0;
	y = 0;
	h = 0.035;
	w = 0.1;
	text = "";
	size = "(			(			(1 / 1.2) / 20) * 0.7)";
	shadow = 1;
};
class RscPicture
{
	access = 0;
	type = 0;
	idc = -1;
	style = 48;
	colorBackground[] = {0,0,0,0};
	colorText[] = {1,1,1,1};
	font = "TahomaB";
	sizeEx = 0;
	lineSpacing = 0;
	text = "";
	fixedWidth = 0;
	shadow = 0;
	x = 0;
	y = 0;
	w = 0.2;
	h = 0.15;
};
class RscEdit
{
	access = 0;
	type = 2;
	x = 0;
	y = 0;
	h = 0.04;
	w = 0.2;
	colorBackground[] = {0,0,0,1};
	colorText[] = {0.95,0.95,0.95,1};
	colorSelection[] = {"(profilenamespace getvariable ['GUI_BCG_RGB_R',0.3843])","(profilenamespace getvariable ['GUI_BCG_RGB_G',0.7019])","(profilenamespace getvariable ['GUI_BCG_RGB_B',0.8862])",1};
	autocomplete = "";
	text = "";
	size = 0.2;
	style = "0x00 + 0x40";
	font = "FontNormal";
	shadow = 2;
	sizeEx = "(			(			(1 / 1.2) / 20) * 0.7)";
};
class RscCombo
{
	access = 0;
	type = 4;
	style = 0;
	colorSelect[] = {0,0,0,1};
	colorText[] = {0,0,0,1};
	colorBackground[] = {0.95,0.95,0.95,1};
	colorScrollbar[] = {0,0,0,1};
	soundSelect[] = {"",0.1,1};
	soundExpand[] = {"",0.1,1};
	soundCollapse[] = {"",0.1,1};
	maxHistoryDelay = 1;
	class ScrollBar
	{
		color[] = {1,1,1,0.6};
		colorActive[] = {1,1,1,1};
		colorDisabled[] = {1,1,1,0.3};
		shadow = 0;
		thumb = "\HSim\UI_H\data\ui_scrollbar_thumb_ca.paa";
		arrowFull = "\HSim\UI_H\data\ui_arrow_top_active_ca.paa";
		arrowEmpty = "\HSim\UI_H\data\ui_arrow_top_ca.paa";
		border = "\HSim\UI_H\data\ui_border_scroll_ca.paa";
	};
	x = 0;
	y = 0;
	w = 0.12;
	h = 0.035;
	shadow = 0;
	colorSelectBackground[] = {"(profilenamespace getvariable ['GUI_BCG_RGB_R',0.3843])","(profilenamespace getvariable ['GUI_BCG_RGB_G',0.7019])","(profilenamespace getvariable ['GUI_BCG_RGB_B',0.8862])",0.5};
	arrowEmpty = "\HSim\UI_H\data\ui_arrow_combo_ca.paa";
	arrowFull = "\HSim\UI_H\data\ui_arrow_combo_active_ca.paa";
	wholeHeight = 0.45;
	color[] = {0,0,0,0.6};
	colorActive[] = {0,0,0,1};
	colorDisabled[] = {0,0,0,0.3};
	font = "FontNormal";
	sizeEx = "(			(			(1 / 1.2) / 20) * 0.7)";
};
class RscListBox
{
	access = 0;
	type = 5;
	w = 0.4;
	h = 0.4;
	rowHeight = 0;
	colorText[] = {1,1,1,1};
	colorScrollbar[] = {0.95,0.95,0.95,1};
	colorSelect[] = {1,1,1,1};
	colorSelect2[] = {1,1,1,1};
	colorSelectBackground[] = {"(profilenamespace getvariable ['GUI_BCG_RGB_R',0.3843])","(profilenamespace getvariable ['GUI_BCG_RGB_G',0.7019])","(profilenamespace getvariable ['GUI_BCG_RGB_B',0.8862])",0.5};
	colorSelectBackground2[] = {"(1 - (profilenamespace getvariable 'GUI_BCG_RGB_R'))","(1-(profilenamespace getvariable 'GUI_BCG_RGB_G'))","(1 -(profilenamespace getvariable 'GUI_BCG_RGB_B'))",0.5};
	colorBackground[] = {0,0,0,1};
	soundSelect[] = {"",0.1,1};
	arrowEmpty = "#(argb,8,8,3)color(1,1,1,1)";
	arrowFull = "#(argb,8,8,3)color(1,1,1,1)";
	class ScrollBar
	{
		color[] = {1,1,1,0.6};
		colorActive[] = {1,1,1,1};
		colorDisabled[] = {1,1,1,0.3};
		shadow = 0;
		thumb = "\HSim\UI_H\data\ui_scrollbar_thumb_ca.paa";
		arrowFull = "\HSim\UI_H\data\ui_arrow_top_active_ca.paa";
		arrowEmpty = "\HSim\UI_H\data\ui_arrow_top_ca.paa";
		border = "\HSim\UI_H\data\ui_border_scroll_ca.paa";
	};
	style = 0x10;
	font = "FontNormal";
	sizeEx = "(			(			(1 / 1.2) / 20) * 0.7)";
	shadow = 1;
	colorShadow[] = {0,0,0,0.5};
	color[] = {1,1,1,1};
	period = 1.2;
	maxHistoryDelay = 1;
	autoScrollSpeed = -1;
	autoScrollDelay = 5;
	autoScrollRewind = 0;
};
class RscButton
{
	access = 0;
	type = 1;
	text = "";
	colorText[] = {1,1,1,1};
	colorDisabled[] = {0.4,0.4,0.4,1};
	colorBackground[] = {"(profilenamespace getvariable 'GUI_BCG_RGB_R')*0.7","(profilenamespace getvariable 'GUI_BCG_RGB_G')*0.7","(profilenamespace getvariable 'GUI_BCG_RGB_B')*0.7",1};
	colorBackgroundDisabled[] = {0.95,0.95,0.95,1};
	colorBackgroundActive[] = {"(1 - 			(profilenamespace getvariable 'GUI_BCG_RGB_R'))","(1 - 			(profilenamespace getvariable 'GUI_BCG_RGB_G'))","(1 - 			(profilenamespace getvariable 'GUI_BCG_RGB_B'))",1};
	colorFocused[] = {"(1 - 			(profilenamespace getvariable 'GUI_BCG_RGB_R'))","(1 - 			(profilenamespace getvariable 'GUI_BCG_RGB_G'))","(1 - 			(profilenamespace getvariable 'GUI_BCG_RGB_B'))",1};
	colorShadow[] = {0,0,0,1};
	colorBorder[] = {0,0,0,1};
	soundEnter[] = {"\HSim\UI_H\data\sound\onover",0.09,1};
	soundPush[] = {"\HSim\UI_H\data\sound\new1",0,0};
	soundClick[] = {"\HSim\UI_H\data\sound\onclick",0.07,1};
	soundEscape[] = {"\HSim\UI_H\data\sound\onescape",0.09,1};
	style = 2;
	x = 0;
	y = 0;
	w = 0.095589;
	h = 0.039216;
	shadow = 2;
	font = "FontNormal";
	sizeEx = "(			(			(1 / 1.2) / 20) * 0.7)";
	offsetX = 0.003;
	offsetY = 0.003;
	offsetPressedX = 0.002;
	offsetPressedY = 0.002;
	borderSize = 0;
};
class RscShortcutButton
{
	type = 16;
	x = 0.1;
	y = 0.1;
	class HitZone
	{
		left = 0;
		top = 0;
		right = 0;
		bottom = 0;
	};
	class ShortcutPos
	{
		left = 0;
		top = "(			(			(1 / 1.2) / 20) - 		(			(			(1 / 1.2) / 20) * 0.7)) / 2";
		w = "(			(			(1 / 1.2) / 20) * 0.7) * (3/4)";
		h = "(			(			(1 / 1.2) / 20) * 0.7)";
	};
	class TextPos
	{
		left = "(			(			(1 / 1.2) / 20) * 0.7) * (3/4)";
		top = "(			(			(1 / 1.2) / 20) - 		(			(			(1 / 1.2) / 20) * 0.7)) / 2";
		right = 0.005;
		bottom = 0;
	};
	shortcuts[] = {};
	textureNoShortcut = "#(argb,8,8,3)color(0,0,0,0)";
	color[] = {1,1,1,1};
	color2[] = {0.95,0.95,0.95,1};
	colorDisabled[] = {1,1,1,0.25};
	colorBackground[] = {"(profilenamespace getvariable 'GUI_BCG_RGB_R')*0.7","(profilenamespace getvariable 'GUI_BCG_RGB_G')*0.7","(profilenamespace getvariable 'GUI_BCG_RGB_B')*0.7",1};
	colorBackground2[] = {"(1 - 			(profilenamespace getvariable 'GUI_BCG_RGB_R'))","(1 - 			(profilenamespace getvariable 'GUI_BCG_RGB_G'))","(1 - 			(profilenamespace getvariable 'GUI_BCG_RGB_B'))",1};
	class Attributes
	{
		font = "FontNormal";
		color = "#E5E5E5";
		align = "left";
		shadow = "true";
	};
	idc = -1;
	style = 0;
	default = 0;
	shadow = 1;
	w = 0.183825;
	h = "(			(1 / 1.2) / 20)";
	animTextureDefault = "\HSim\UI_H\data\ui_button_shortcut_normal_ca.paa";
	animTextureNormal = "\HSim\UI_H\data\ui_button_shortcut_normal_ca.paa";
	animTextureDisabled = "\HSim\UI_H\data\ui_button_shortcut_normal_ca.paa";
	animTextureOver = "\HSim\UI_H\data\ui_button_shortcut_over_ca.paa";
	animTextureFocused = "\HSim\UI_H\data\ui_button_shortcut_focus_ca.paa";
	animTexturePressed = "\HSim\UI_H\data\ui_button_shortcut_down_ca.paa";
	periodFocus = 1.2;
	periodOver = 0.8;
	period = 0.4;
	font = "FontNormal";
	size = "(			(			(1 / 1.2) / 20) * 0.7)";
	sizeEx = "(			(			(1 / 1.2) / 20) * 0.7)";
	text = "";
	soundEnter[] = {"\HSim\UI_H\data\sound\onover",0.09,1};
	soundPush[] = {"\HSim\UI_H\data\sound\new1",0,0};
	soundClick[] = {"\HSim\UI_H\data\sound\onclick",0.07,1};
	soundEscape[] = {"\HSim\UI_H\data\sound\onescape",0.09,1};
	action = "";
	class AttributesImage
	{
		font = "FontNormal";
		color = "#E5E5E5";
		align = "left";
	};
};
class RscShortcutButtonMain
{
	idc = -1;
	style = 0;
	default = 0;
	w = 0.313726;
	h = 0.104575;
	color[] = {1,1,1,1};
	colorDisabled[] = {1,1,1,0.25};
	colorBackground2[] = {"(profilenamespace getvariable 'GUI_BCG_RGB_R')*0.7","(profilenamespace getvariable 'GUI_BCG_RGB_G')*0.7","(profilenamespace getvariable 'GUI_BCG_RGB_B')*0.7",1};
	class HitZone
	{
		left = 0;
		top = 0;
		right = 0;
		bottom = 0;
	};
	class ShortcutPos
	{
		left = 0.0145;
		top = "(			(			(1 / 1.2) / 20) - 		(			(			(1 / 1.2) / 20) * 0.9)) / 2";
		w = "(			(			(1 / 1.2) / 20) * 0.9) * (3/4)";
		h = "(			(			(1 / 1.2) / 20) * 0.9)";
	};
	class TextPos
	{
		left = "(			(1) / 32) * 1.5";
		top = "(			(			(1 / 1.2) / 20)*2 - 		(			(			(1 / 1.2) / 20) * 0.9)) / 2";
		right = 0.005;
		bottom = 0;
	};
	animTextureNormal = "\HSim\UI_H\data\ui_button_main_normal_ca.paa";
	animTextureDisabled = "\HSim\UI_H\data\ui_button_main_disabled_ca.paa";
	animTextureOver = "\HSim\UI_H\data\ui_button_main_over_ca.paa";
	animTextureFocused = "\HSim\UI_H\data\ui_button_main_focus_ca.paa";
	animTexturePressed = "\HSim\UI_H\data\ui_button_main_down_ca.paa";
	animTextureDefault = "\HSim\UI_H\data\ui_button_main_normal_ca.paa";
	period = 0.5;
	font = "FontNormal";
	size = "(			(			(1 / 1.2) / 20) * 0.9)";
	sizeEx = "(			(			(1 / 1.2) / 20) * 0.9)";
	text = "";
	soundEnter[] = {"\HSim\UI_H\data\sound\onover",0.09,1};
	soundPush[] = {"\HSim\UI_H\data\sound\new1",0,0};
	soundClick[] = {"\HSim\UI_H\data\sound\onclick",0.07,1};
	soundEscape[] = {"\HSim\UI_H\data\sound\onescape",0.09,1};
	action = "";
	class Attributes
	{
		font = "FontNormal";
		color = "#E5E5E5";
		align = "left";
		shadow = "false";
	};
	class AttributesImage
	{
		font = "FontNormal";
		color = "#E5E5E5";
		align = "false";
	};
};
class RscFrame
{
	type = 0;
	idc = -1;
	style = 64;
	shadow = 1;
	colorBackground[] = {0,0,0,0};
	colorText[] = {1,1,1,1};
	font = "FontNormal";
	sizeEx = 0.02;
	text = "";
};
class RscSlider
{
	access = 0;
	type = 3;
	style = 1024;
	w = 0.3;
	color[] = {1,1,1,0.8};
	colorActive[] = {1,1,1,1};
	shadow = 0;
	h = 0.025;
};
class IGUIBack
{
	type = 0;
	idc = 124;
	style = 128;
	text = "";
	colorText[] = {0,0,0,0};
	font = "FontNormal";
	sizeEx = 0;
	shadow = 0;
	x = 0.1;
	y = 0.1;
	w = 0.1;
	h = 0.1;
	colorbackground[] = {"(profilenamespace getvariable ['GUI_BCG_RGB_R',0.3843])","(profilenamespace getvariable ['GUI_BCG_RGB_G',0.7019])","(profilenamespace getvariable ['GUI_BCG_RGB_B',0.8862])","(profilenamespace getvariable ['GUI_BCG_RGB_A',0.7])"};
};
class RscControlsGroup
{
	class VScrollbar
	{
		color[] = {1,1,1,1};
		width = 0.021;
		autoScrollSpeed = -1;
		autoScrollDelay = 5;
		autoScrollRewind = 0;
		shadow = 0;
	};
	class HScrollbar
	{
		color[] = {1,1,1,1};
		height = 0.028;
		shadow = 0;
	};
	class ScrollBar
	{
		color[] = {1,1,1,0.6};
		colorActive[] = {1,1,1,1};
		colorDisabled[] = {1,1,1,0.3};
		shadow = 0;
		thumb = "\HSim\UI_H\data\ui_scrollbar_thumb_ca.paa";
		arrowFull = "\HSim\UI_H\data\ui_arrow_top_active_ca.paa";
		arrowEmpty = "\HSim\UI_H\data\ui_arrow_top_ca.paa";
		border = "\HSim\UI_H\data\ui_border_scroll_ca.paa";
	};
	class Controls
	{
	};
	type = 15;
	idc = -1;
	x = 0;
	y = 0;
	w = 1;
	h = 1;
	shadow = 0;
	style = 16;
};



class OfficeDialog {
	idd = 4200;
	movingEnable = 0;
	class controlsBackground { 
	
	};
	class objects { 
		// define controls here
	};
	class controls { 
////////////////////////////////////////////////////////
// GUI EDITOR OUTPUT START (by Tom Larkin, v1.044)
////////////////////////////////////////////////////////

class IGUIBack_2200: IGUIBack
{
	idc = 2200;
	x = 0 * GUI_GRID_W + GUI_GRID_X;
	y = 0 * GUI_GRID_H + GUI_GRID_Y;
	w = 32 * GUI_GRID_W;
	h = 20 * GUI_GRID_H;
	colorBackground[] = {0.2,0.5,0.5,0.5};
};
class InnerFrame: IGUIBack
{
	idc = 2201;
	x = 0.5 * GUI_GRID_W + GUI_GRID_X;
	y = 1.7 * GUI_GRID_H + GUI_GRID_Y;
	w = 31 * GUI_GRID_W;
	h = 16.5 * GUI_GRID_H;
	colorBackground[] = {0.2,0.2,0.2,0.2};
};
class OverviewGroup: RscControlsGroup
{
	idc = 2300;
	x = 1 * GUI_GRID_W + GUI_GRID_X;
	y = 2 * GUI_GRID_H + GUI_GRID_Y;
	w = 30 * GUI_GRID_W;
	h = 16 * GUI_GRID_H;
	class controls
	{
		class OverviewText: RscText
		{
			idc = 1000;
			text = "Overview"; //--- ToDo: Localize;
			x = 0 * GUI_GRID_W;
			y = 0 * GUI_GRID_H;
			w = 3 * GUI_GRID_W;
			h = 0.5 * GUI_GRID_H;
		};
		class IGUIBack_2206: IGUIBack
		{
			idc = 2206;
			x = 10 * GUI_GRID_W;
			y = 1 * GUI_GRID_H;
			w = 8.5 * GUI_GRID_W;
			h = 15 * GUI_GRID_H;
			colorBackground[] = {0.2,0.2,0.2,0.2};
		};
		class InventoryText: RscText
		{
			idc = 1019;
			text = "Inventory"; //--- ToDo: Localize;
			x = 10 * GUI_GRID_W;
			y = 0 * GUI_GRID_H;
			w = 3 * GUI_GRID_W;
			h = 0.5 * GUI_GRID_H;
		};
		class IGUIBack_2207: IGUIBack
		{
			idc = 2207;
			x = 18.5 * GUI_GRID_W;
			y = 1 * GUI_GRID_H;
			w = 11.5 * GUI_GRID_W;
			h = 15 * GUI_GRID_H;
			colorBackground[] = {0.2,0.2,0.2,0.2};
		};
		class InventorySelDescription: RscText
		{
			style = ST_MULTI;

			idc = 1020;
			text = "Select an item on the list for details."; //--- ToDo: Localize;
			x = 19 * GUI_GRID_W;
			y = 6.5 * GUI_GRID_H;
			w = 10.5 * GUI_GRID_W;
			h = 3.5 * GUI_GRID_H;
		};
		class InventorySelName: RscText
		{
			idc = 1021;
			x = 19 * GUI_GRID_W;
			y = 1.5 * GUI_GRID_H;
			w = 10.5 * GUI_GRID_W;
			h = 1 * GUI_GRID_H;
		};
		class InventorySelPicture: RscPicture
		{
			idc = 1202;
			text = "#(argb,8,8,3)color(1,1,1,0)";
			x = 22.5 * GUI_GRID_W;
			y = 3 * GUI_GRID_H;
			w = 3.5 * GUI_GRID_W;
			h = 3 * GUI_GRID_H;
		};
		class InventoryList: RscListbox
		{
			onLBSelChanged = "[HW_Office_Inventory select (_this select 1), _this select 1] call HW_Office_InventorySetSelection;";

			idc = 1502;
			x = 10.5 * GUI_GRID_W;
			y = 1.5 * GUI_GRID_H;
			w = 7.5 * GUI_GRID_W;
			h = 14 * GUI_GRID_H;
		};
		class IGUIBack_2208: IGUIBack
		{
			idc = 2208;
			x = 0 * GUI_GRID_W;
			y = 1 * GUI_GRID_H;
			w = 10 * GUI_GRID_W;
			h = 15 * GUI_GRID_H;
			colorBackground[] = {0.2,0.2,0.2,0.2};
		};
		class InventorySelWeight: RscText
		{
			style = ST_MULTI;

			idc = 1022;
			x = 19 * GUI_GRID_W;
			y = 10.5 * GUI_GRID_H;
			w = 5 * GUI_GRID_W;
			h = 1 * GUI_GRID_H;
		};
		class InventorySelCondition: RscText
		{
			style = ST_MULTI;

			idc = 1023;
			x = 19 * GUI_GRID_W;
			y = 12 * GUI_GRID_H;
			w = 5 * GUI_GRID_W;
			h = 1 * GUI_GRID_H;
		};
	};
};
class StoreGroup: RscControlsGroup
{
	idc = 2301;
	x = 1 * GUI_GRID_W + GUI_GRID_X;
	y = 2 * GUI_GRID_H + GUI_GRID_Y;
	w = 30 * GUI_GRID_W;
	h = 16 * GUI_GRID_H;
	class controls
	{
		class StoreText: RscText
		{
			idc = 1001;
			text = "Store"; //--- ToDo: Localize;
			x = 0 * GUI_GRID_W;
			y = 0 * GUI_GRID_H;
			w = 3 * GUI_GRID_W;
			h = 0.5 * GUI_GRID_H;
		};
		class RscText_1003: RscText
		{
			idc = 1003;
			text = "Welcome to Heli-bay! Your one-stop shop for all things hovering!"; //--- ToDo: Localize;
			x = 0 * GUI_GRID_W;
			y = 1 * GUI_GRID_H;
			w = 18.5 * GUI_GRID_W;
			h = 0.5 * GUI_GRID_H;
		};
		class IGUIBack_2202: IGUIBack
		{
			idc = 2202;
			x = 0 * GUI_GRID_W;
			y = 2 * GUI_GRID_H;
			w = 13 * GUI_GRID_W;
			h = 14 * GUI_GRID_H;
			colorBackground[] = {0.2,0.2,0.2,0.2};
		};
		class IGUIBack_2203: IGUIBack
		{
			idc = 2203;
			x = 13 * GUI_GRID_W;
			y = 2 * GUI_GRID_H;
			w = 17 * GUI_GRID_W;
			h = 14 * GUI_GRID_H;
			colorBackground[] = {0.2,0.2,0.2,0.2};
		};
		class StoreItemList: RscListbox
		{
			onLBSelChanged = "(HW_Office_StoreItems select (_this select 1)) call HW_Office_StoreSetSelection;";

			idc = 1500;
			x = 0.5 * GUI_GRID_W;
			y = 2.5 * GUI_GRID_H;
			w = 12 * GUI_GRID_W;
			h = 13 * GUI_GRID_H;
		};
		class StoreSelText: RscText
		{
			idc = 1004;
			x = 13.5 * GUI_GRID_W;
			y = 2.5 * GUI_GRID_H;
			w = 16 * GUI_GRID_W;
			h = 1 * GUI_GRID_H;
		};
		class StoreSelDescription: RscText
		{
			style = ST_MULTI;

			idc = 1005;
			text = "Select an item on the list to purchase it."; //--- ToDo: Localize;
			x = 13.5 * GUI_GRID_W;
			y = 4 * GUI_GRID_H;
			w = 15.5 * GUI_GRID_W;
			h = 3.5 * GUI_GRID_H;
		};
		class StoreSelPicture: RscPicture
		{
			idc = 1200;
			text = "#(argb,8,8,3)color(1,1,1,0)";
			x = 13.5 * GUI_GRID_W;
			y = 8 * GUI_GRID_H;
			w = 8 * GUI_GRID_W;
			h = 5.5 * GUI_GRID_H;
		};
		class StoreSelPrice: RscText
		{
			idc = 1006;
			x = 20.5 * GUI_GRID_W;
			y = 14.5 * GUI_GRID_H;
			w = 5 * GUI_GRID_W;
			h = 1 * GUI_GRID_H;
		};
		class BuyButton: RscButton
		{
			action = "call HW_Office_StorePlaceOrder;";

			idc = 1604;
			text = "Order"; //--- ToDo: Localize;
			x = 26.5 * GUI_GRID_W;
			y = 14.5 * GUI_GRID_H;
			w = 3 * GUI_GRID_W;
			h = 1 * GUI_GRID_H;
		};
		class StoreItemWeight: RscText
		{
			idc = 1008;
			x = 22.5 * GUI_GRID_W;
			y = 8 * GUI_GRID_H;
			w = 7 * GUI_GRID_W;
			h = 1 * GUI_GRID_H;
		};
		class StoreItemCondition: RscText
		{
			idc = 1009;
			x = 22.5 * GUI_GRID_W;
			y = 9.5 * GUI_GRID_H;
			w = 7 * GUI_GRID_W;
			h = 1 * GUI_GRID_H;
		};
		class StoreEstimatedDeliveryTime: RscText
		{
			idc = 1010;
			x = 22.5 * GUI_GRID_W;
			y = 11 * GUI_GRID_H;
			w = 7 * GUI_GRID_W;
			h = 2.5 * GUI_GRID_H;
		};
	};
};
class OrdersGroup: RscControlsGroup
{
	idc = 2302;
	x = 1 * GUI_GRID_W + GUI_GRID_X;
	y = 2 * GUI_GRID_H + GUI_GRID_Y;
	w = 30 * GUI_GRID_W;
	h = 16 * GUI_GRID_H;
	class controls
	{
		class OrdersText: RscText
		{
			idc = 1002;
			text = "Orders"; //--- ToDo: Localize;
			x = 0 * GUI_GRID_W;
			y = 0 * GUI_GRID_H;
			w = 3 * GUI_GRID_W;
			h = 0.5 * GUI_GRID_H;
		};
		class IGUIBack_2204: IGUIBack
		{
			idc = 2204;
			x = 0 * GUI_GRID_W;
			y = 2 * GUI_GRID_H;
			w = 13 * GUI_GRID_W;
			h = 14 * GUI_GRID_H;
			colorBackground[] = {0.2,0.2,0.2,0.2};
		};
		class IGUIBack_2205: IGUIBack
		{
			idc = 2205;
			x = 13 * GUI_GRID_W;
			y = 2 * GUI_GRID_H;
			w = 17 * GUI_GRID_W;
			h = 14 * GUI_GRID_H;
			colorBackground[] = {0.2,0.2,0.2,0.2};
		};
		class OrdersCaption: RscText
		{
			idc = 1011;
			text = "Incoming Orders"; //--- ToDo: Localize;
			x = 0 * GUI_GRID_W;
			y = 1 * GUI_GRID_H;
			w = 18.5 * GUI_GRID_W;
			h = 0.5 * GUI_GRID_H;
		};
		class OrdersItemsList: RscListbox
		{
			onLBSelChanged = "[HW_Office_Orders select (_this select 1), _this select 1] call HW_Office_OrdersSetSelection;";

			idc = 1501;
			x = 0.5 * GUI_GRID_W;
			y = 2.5 * GUI_GRID_H;
			w = 12 * GUI_GRID_W;
			h = 13 * GUI_GRID_H;
		};
		class OrdersSelName: RscText
		{
			idc = 1012;
			x = 13.5 * GUI_GRID_W;
			y = 2.5 * GUI_GRID_H;
			w = 16 * GUI_GRID_W;
			h = 1 * GUI_GRID_H;
		};
		class OrdersSelDescription: RscText
		{
			style = ST_MULTI;

			idc = 1013;
			text = "Select an item on the list to see its shipping status."; //--- ToDo: Localize;
			x = 13.5 * GUI_GRID_W;
			y = 4 * GUI_GRID_H;
			w = 15.5 * GUI_GRID_W;
			h = 3.5 * GUI_GRID_H;
		};
		class OrdersSelPicture: RscPicture
		{
			idc = 1201;
			text = "#(argb,8,8,3)color(1,1,1,0)";
			x = 13.5 * GUI_GRID_W;
			y = 8 * GUI_GRID_H;
			w = 8 * GUI_GRID_W;
			h = 5.5 * GUI_GRID_H;
		};
		class CancelOrderButton: RscButton
		{
			action = "call HW_Office_CancelOrder;";

			idc = 1605;
			text = "Cancel Order"; //--- ToDo: Localize;
			x = 25 * GUI_GRID_W;
			y = 14.5 * GUI_GRID_H;
			w = 4.5 * GUI_GRID_W;
			h = 1 * GUI_GRID_H;
		};
		class OrdersPricePaid: RscText
		{
			idc = 1014;
			x = 13.5 * GUI_GRID_W;
			y = 14.5 * GUI_GRID_H;
			w = 5 * GUI_GRID_W;
			h = 1 * GUI_GRID_H;
		};
		class OrdersRefund: RscText
		{
			idc = 1015;
			x = 19.5 * GUI_GRID_W;
			y = 14.5 * GUI_GRID_H;
			w = 5 * GUI_GRID_W;
			h = 1 * GUI_GRID_H;
		};
		class OrdersItemWeight: RscText
		{
			idc = 1016;
			x = 22.5 * GUI_GRID_W;
			y = 8 * GUI_GRID_H;
			w = 7 * GUI_GRID_W;
			h = 1 * GUI_GRID_H;
		};
		class OrdersItemCondition: RscText
		{
			idc = 1017;
			x = 22.5 * GUI_GRID_W;
			y = 9.5 * GUI_GRID_H;
			w = 7 * GUI_GRID_W;
			h = 1 * GUI_GRID_H;
		};
		class OrdersEstimatedTime: RscText
		{
			idc = 1018;
			x = 22.5 * GUI_GRID_W;
			y = 11 * GUI_GRID_H;
			w = 7 * GUI_GRID_W;
			h = 2.5 * GUI_GRID_H;
		};
	};
};
class FundsText: RscText
{
	idc = 1007;
	text = "Funds: "; //--- ToDo: Localize;
	x = 0.5 * GUI_GRID_W + GUI_GRID_X;
	y = 18.5 * GUI_GRID_H + GUI_GRID_Y;
	w = 12 * GUI_GRID_W;
	h = 1 * GUI_GRID_H;
};
class OverviewButton: RscButton
{
	action = "HW_Office_Mode = 0";

	idc = 1600;
	text = "Overview"; //--- ToDo: Localize;
	x = 0.5 * GUI_GRID_W + GUI_GRID_X;
	y = 0.5 * GUI_GRID_H + GUI_GRID_Y;
	w = 4.5 * GUI_GRID_W;
	h = 1 * GUI_GRID_H;
};
class StoreButton: RscButton
{
	action = "HW_Office_Mode = 1";

	idc = 1601;
	text = "Online Store"; //--- ToDo: Localize;
	x = 5.5 * GUI_GRID_W + GUI_GRID_X;
	y = 0.5 * GUI_GRID_H + GUI_GRID_Y;
	w = 4.5 * GUI_GRID_W;
	h = 1 * GUI_GRID_H;
};
class OrdersButton: RscButton
{
	action = "HW_Office_Mode = 2";

	idc = 1603;
	text = "Orders"; //--- ToDo: Localize;
	x = 10.5 * GUI_GRID_W + GUI_GRID_X;
	y = 0.5 * GUI_GRID_H + GUI_GRID_Y;
	w = 4.5 * GUI_GRID_W;
	h = 1 * GUI_GRID_H;
};
class CloseButton: RscButton
{
	action = "closeDialog 4200";

	idc = 1602;
	text = "Close"; //--- ToDo: Localize;
	x = 27 * GUI_GRID_W + GUI_GRID_X;
	y = 18.5 * GUI_GRID_H + GUI_GRID_Y;
	w = 4.5 * GUI_GRID_W;
	h = 1 * GUI_GRID_H;
};
////////////////////////////////////////////////////////
// GUI EDITOR OUTPUT END
////////////////////////////////////////////////////////

		
	};	
};

