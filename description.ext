


class CfgIdentities
{
	class HW_Ident_Dispatch
	{
		name = "Central Dispatch";
		face = "Face20";
        glasses = "None";
        speaker = "Dan";
        pitch = 1.0;
	};
};

class CfgRadio
{
	sounds[] = {};
	class HW_Radio_ReceivedStby
	{
		name = "";
		sound[] = {"\sound\received.ogg", db-100, 1.0};
		title = "Received, Standby...";
	};
	
	class HW_Radio_RogerStby
	{
		name = "";
		sound[] = {"\sound\roger.ogg", db-100, 1.0};
		title = "Roger That, Standby...";
	};
	
	class HW_Radio_CopyStby
	{
		name = "";
		sound[] = {"\sound\copy.ogg", db-100, 1.0};
		title = "Copy That, Stay on just a sec...";
	};
	
	
	
	class HW_Radio_Update
	{
		name = "";
		sound[] = {"\sound\update.ogg", db-100, 1.0};
		title = "Able Units, Update!";
	};
	
	class HW_Radio_CheckReport
	{
		name = "";
		sound[] = {"\sound\check report.ogg", db-100, 1.0};
		title = "Able Units, Map Check, Acknowledge!";
	};
	
	class HW_Radio_MapCheck
	{
		name = "";
		sound[] = {"\sound\map check.ogg", db-100, 1.0};
		title = "Able Units, Map Check!";
	};
	
	class HW_Radio_UpdateReport
	{
		name = "";
		sound[] = {"\sound\update report.ogg", db-100, 1.0};
		title = "Able Units, Update, Check and Acknowledge!";
	};
	
	class HW_Radio_CheckIn
	{
		name = "";
		sound[] = {"\sound\check in.ogg", db-100, 1.0};
		title = "Able Units, Check In!";
	};
	
	class HW_Radio_Report
	{
		name = "";
		sound[] = {"\sound\report.ogg", db-100, 1.0};
		title = "Able Units, Acknowledge!";
	};
	
	
	class HW_Radio_Dispatch
	{
		name = "";
		sound[] = {"\sound\dispatch update.ogg", db-100, 1.0};
		title = "Able units, Dispatch, Update!";
	};
	
	class HW_Radio_Update_Info
	{
		name = "";
		sound[] = {"\sound\update info.ogg", db-100, 1.0};
		title = "Able Units, Update, Call back for more info...";
	};
	
	
	
	
	
	class HW_Radio_Unable
	{
		name = "";
		sound[] = {"\sound\copy unable.ogg", db-100, 1.0};
		title = "We copy you unable. Please Confirm!";
	};
	
	class HW_Radio_Taxi_Commit
	{
		name = "";
		sound[] = {"\sound\copy enroute.ogg", db-100, 1.0};
		title = "Confirmed! Passengers should be out at departure by the time you get there...";
	};
	
	
	class HW_Radio_Taxi_Enroute_Abort
	{
		name = "";
		sound[] = {"\sound\abort with pax.ogg", db-100, 1.0};
		title = "Understand aborting enroute and dropping passengers! Copy that! Advise when landed!";
	};
	
	class HW_Radio_Taxi_Abort_Landed
	{
		name = "";
		sound[] = {"\sound\abort pax landed.ogg", db-100, 1.0};
		title = "Copy landed! - We got a fix on your location and will dispatch another bird, can you confirm?";
	};
	
	class HW_Radio_Taxi_Little_Late
	{
		name = "";
		sound[] = {"\sound\a little late.ogg", db-100, 1.0};
		title = "Dispatch to Larkin - What's taking you so long?? Good thing you're almost there, or we'd have sent someone else by now!";
	};
	
	class HW_Radio_Taxi_Too_Late
	{
		name = "";
		sound[] = {"\sound\a whole lot late.ogg", db-100, 1.0};
		title = "Dispatch to Larkin - Where the hell are you?! ... You are dismissed from this assignment! ... We've sent out another chopper!";
	};
	
	class HW_Radio_Taxi_Epic_Fail
	{
		name = "";
		sound[] = {"\sound\epic fail.ogg", db-100, 1.0};
		title = " ** RANT ** ";
	};
	
	class HW_Radio_See_You_Later
	{
		name = "";
		sound[] = {"\sound\later.ogg", db-100, 1.0};
		title = "Copy that! See you later!";
	};
};




class CfgSounds
{
	sounds[] = {};
	
	class FX_Dispatch_Chime
	{
		// how the sound is referred to in the editor (e.g. trigger effects)
		name = "hw_fx_dispatch_chime";
		// filename, volume, pitch
		sound[] = {"\sound\chime2.ogg", 1, 1};
		titles[] = {};
	};
	class FX_Dispatch_Beep
	{
		// how the sound is referred to in the editor (e.g. trigger effects)
		name = "hw_fx_dispatch_beep";
		// filename, volume, pitch
		sound[] = {"\sound\beepbeep.ogg", 1, 1};
		titles[] = {};
	};
	class FX_Dispatch_Error
	{
		// how the sound is referred to in the editor (e.g. trigger effects)
		name = "hw_fx_dispatch_error";
		// filename, volume, pitch
		sound[] = {"\sound\error.ogg", 1, 1};
		titles[] = {};
	};
	
	
	
	class FX_Pump_Fuel
	{
		// how the sound is referred to in the editor (e.g. trigger effects)
		name = "hw_fx_pump_fuel";
		// filename, volume, pitch
		sound[] = {"\sound\fx_pump_fuel.ogg", 1, 1};
		titles[] = {};
	};
	class FX_Draw_Fuel_Line
	{
		// how the sound is referred to in the editor (e.g. trigger effects)
		name = "hw_fx_draw_fuel_line";
		// filename, volume, pitch
		sound[] = {"\sound\fx_draw_fuel_line.ogg", 1, 1};
		titles[] = {};
	};
	class FX_Rope_Release
	{
		// how the sound is referred to in the editor (e.g. trigger effects)
		name = "hw_fx_rope_release";
		// filename, volume, pitch
		sound[] = {"\sound\fx_rope_release.ogg", 1, 1};
		titles[] = {};
	};
	class FX_Rope_Connect
	{
		// how the sound is referred to in the editor (e.g. trigger effects)
		name = "hw_fx_rope_connect";
		// filename, volume, pitch
		sound[] = {"\sound\fx_rope_connect.ogg", 1, 1};
		titles[] = {};
	};
	class FX_Rope_Unlatch
	{
		// how the sound is referred to in the editor (e.g. trigger effects)
		name = "hw_fx_rope_unlatch";
		// filename, volume, pitch
		sound[] = {"\sound\fx_rope_unlatch.ogg", 1, 1};
		titles[] = {};
	};
	
	class FX_Fail_Engine_Bad
	{
		// how the sound is referred to in the editor (e.g. trigger effects)
		name = "hw_fx_fail_engine_bad";
		// filename, volume, pitch
		sound[] = {"\sound\fx_fail_engine_bad.ogg", 1, 1};
		titles[] = {};
	};
	
	class FX_Fail_Surge
	{
		// how the sound is referred to in the editor (e.g. trigger effects)
		name = "hw_fx_fail_surge";
		// filename, volume, pitch
		sound[] = {"\sound\fx_fail_surge.ogg", 1, 1};
		titles[] = {};
	};
	
	class FX_Fail_Clunk
	{
		// how the sound is referred to in the editor (e.g. trigger effects)
		name = "hw_fx_fail_clunk";
		// filename, volume, pitch
		sound[] = {"\sound\fx_fail_clunk.ogg", 1, 1};
		titles[] = {};
	};
	
	class FX_Fail_Crackling
	{
		// how the sound is referred to in the editor (e.g. trigger effects)
		name = "hw_fx_fail_crackling";
		// filename, volume, pitch
		sound[] = {"\sound\fx_fail_crackling.ogg", 1, 1};
		titles[] = {};
	};
	
	class FX_Fail_Rough
	{
		// how the sound is referred to in the editor (e.g. trigger effects)
		name = "hw_fx_fail_rough";
		// filename, volume, pitch
		sound[] = {"\sound\fx_fail_rough.ogg", 1, 1};
		titles[] = {};
	};
};


class CfgLoadingTexts
{
	//--- Delay between texts are swapped (by default same as delay for images)
	refreshDelay = 2

	//--- Loading text container
	class Heli4Hire_1
	{
		//--- Hint title
		title = "SimCopter Take On Revival";

		//--- Lines of text (<br /> will be placed inbetween them)
		text[] = {
			"Inspecting ground resonance damper"
		};

		//--- Enable diary record (e.g. text is atimatically added to 'Hints' category in notes)
		isDiary = 0;
	};
	class Heli4Hire_2
	{
		//--- Hint title
		title = "SimCopter Take On Revival";

		//--- Lines of text (<br /> will be placed inbetween them)
		text[] = {
			"Cleaning elastomeric bearings"
		};

		//--- Enable diary record (e.g. text is atimatically added to 'Hints' category in notes)
		isDiary = 0;
	};
	class Heli4Hire_3
	{
		//--- Hint title
		title = "SimCopter Take On Revival";

		//--- Lines of text (<br /> will be placed inbetween them)
		text[] = {
			"Balancing swashplate" 
		};

		//--- Enable diary record (e.g. text is atimatically added to 'Hints' category in notes)
		isDiary = 0;
	};
	class Heli4Hire_4
	{
		//--- Hint title
		title = "SimCopter Take On Revival";

		//--- Lines of text (<br /> will be placed inbetween them)
		text[] = {
			"Calibrating lag-lead hinges"
		};

		//--- Enable diary record (e.g. text is atimatically added to 'Hints' category in notes)
		isDiary = 0;
	};
	class Heli4Hire_5
	{
		//--- Hint title
		title = "SimCopter Take On Revival";
		
		//--- Lines of text (<br /> will be placed inbetween them)
		text[] = {
			"Adjusting density altitude"
		};

		//--- Enable diary record (e.g. text is atimatically added to 'Hints' category in notes)
		isDiary = 0;
	};
	class Heli4Hire_6
	{
		//--- Hint title
		title = "SimCopter Take On Revival";
		
		//--- Lines of text (<br /> will be placed inbetween them)
		text[] = {
			"Lubricating freewheel unit"
		};

		//--- Enable diary record (e.g. text is atimatically added to 'Hints' category in notes)
		isDiary = 0;
	};
	class Heli4Hire_7
	{
		//--- Hint title
		title = "SimCopter Take On Revival";

		//--- Lines of text (<br /> will be placed inbetween them)
		text[] = {
			"Tuning rotor tracking"
		};

		//--- Enable diary record (e.g. text is atimatically added to 'Hints' category in notes)
		isDiary = 0;
	};
	class Heli4Hire_8
	{
		//--- Hint title
		title = "SimCopter Take On Revival";

		//--- Lines of text (<br /> will be placed inbetween them)
		text[] = {
			"Reticulating Splines"
		};

		//--- Enable diary record (e.g. text is atimatically added to 'Hints' category in notes)
		isDiary = 0;
	};
};


///////////////////////////////////////////////////////////////////////////
///  Fleet and Hardware Class Definitions
///////////////////////////////////////////////////////////////////////////

#include <cfgClassDefs.h>



///////////////////////////////////////////////////////////////////////////
/// Animation Viewer
///////////////////////////////////////////////////////////////////////////


#include <AnimationViewer\include.h>



///////////////////////////////////////////////////////////////////////////
/// Controls & Dialogs
///////////////////////////////////////////////////////////////////////////


#include <ctrlDefs.h>

#include <Hangar\office_dialog.h>
#include <Hangar\hangar_dialog.h>
